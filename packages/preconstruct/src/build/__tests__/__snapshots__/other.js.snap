// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`browser no module: dist/browser-no-module.browser.cjs.js 1`] = `
"'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

let thing = \\"wow\\";

{
  thing = \\"something\\";
}

{
  thing += \\"other\\";
}

var thing$1 = thing;

exports.default = thing$1;
"
`;

exports[`browser no module: dist/browser-no-module.cjs.dev.js 1`] = `
"'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

let thing = \\"wow\\";

if (typeof window !== \\"undefined\\") {
  thing = \\"something\\";
}

if (typeof document !== undefined) {
  thing += \\"other\\";
}

var thing$1 = thing;

exports.default = thing$1;
"
`;

exports[`browser no module: dist/browser-no-module.cjs.js 1`] = `
"'use strict';

if (process.env.NODE_ENV === \\"production\\") {
  module.exports = require(\\"./browser-no-module.cjs.prod.js\\");
} else {
  module.exports = require(\\"./browser-no-module.cjs.dev.js\\");
}
"
`;

exports[`browser no module: dist/browser-no-module.cjs.prod.js 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: !0
});

let thing = \\"wow\\";

\\"undefined\\" != typeof window && (thing = \\"something\\"), void 0 !== typeof document && (thing += \\"other\\");

var thing$1 = thing;

exports.default = thing$1;
"
`;

exports[`browser no module: package.json 1`] = `
"{
  \\"name\\": \\"browser-no-module\\",
  \\"version\\": \\"1.0.0\\",
  \\"main\\": \\"dist/browser-no-module.cjs.js\\",
  \\"browser\\": {
    \\"./dist/browser-no-module.cjs.js\\": \\"./dist/browser-no-module.browser.cjs.js\\"
  },
  \\"license\\": \\"MIT\\",
  \\"private\\": true
}
"
`;

exports[`browser no module: src/index.js 1`] = `
"let thing = \\"wow\\";

if (typeof window !== \\"undefined\\") {
  thing = \\"something\\";
}

if (typeof document !== undefined) {
  thing += \\"other\\";
}

export default thing;
"
`;

exports[`browser: dist/browser.browser.cjs.js 1`] = `
"'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

let thing = \\"wow\\";

{
  thing = \\"something\\";
}

{
  thing += \\"other\\";
}

var thing$1 = thing;

exports.default = thing$1;
"
`;

exports[`browser: dist/browser.browser.esm.js 1`] = `
"let thing = \\"wow\\";

{
  thing = \\"something\\";
}

{
  thing += \\"other\\";
}

var thing$1 = thing;

export default thing$1;
"
`;

exports[`browser: dist/browser.cjs.dev.js 1`] = `
"'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

let thing = \\"wow\\";

if (typeof window !== \\"undefined\\") {
  thing = \\"something\\";
}

if (typeof document !== undefined) {
  thing += \\"other\\";
}

var thing$1 = thing;

exports.default = thing$1;
"
`;

exports[`browser: dist/browser.cjs.js 1`] = `
"'use strict';

if (process.env.NODE_ENV === \\"production\\") {
  module.exports = require(\\"./browser.cjs.prod.js\\");
} else {
  module.exports = require(\\"./browser.cjs.dev.js\\");
}
"
`;

exports[`browser: dist/browser.cjs.prod.js 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: !0
});

let thing = \\"wow\\";

\\"undefined\\" != typeof window && (thing = \\"something\\"), void 0 !== typeof document && (thing += \\"other\\");

var thing$1 = thing;

exports.default = thing$1;
"
`;

exports[`browser: dist/browser.esm.js 1`] = `
"let thing = \\"wow\\";

if (typeof window !== \\"undefined\\") {
  thing = \\"something\\";
}

if (typeof document !== undefined) {
  thing += \\"other\\";
}

var thing$1 = thing;

export default thing$1;
"
`;

exports[`browser: package.json 1`] = `
"{
  \\"name\\": \\"browser\\",
  \\"version\\": \\"1.0.0\\",
  \\"main\\": \\"dist/browser.cjs.js\\",
  \\"license\\": \\"MIT\\",
  \\"private\\": true,
  \\"module\\": \\"dist/browser.esm.js\\",
  \\"browser\\": {
    \\"./dist/browser.cjs.js\\": \\"./dist/browser.browser.cjs.js\\",
    \\"./dist/browser.esm.js\\": \\"./dist/browser.browser.esm.js\\"
  }
}
"
`;

exports[`browser: src/index.js 1`] = `
"let thing = \\"wow\\";

if (typeof window !== \\"undefined\\") {
  thing = \\"something\\";
}

if (typeof document !== undefined) {
  thing += \\"other\\";
}

export default thing;
"
`;

exports[`react native: with-react-native-field.cjs.dev.js 1`] = `
"'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = \\"react native\\";

exports.default = index;
"
`;

exports[`react native: with-react-native-field.cjs.js 1`] = `
"'use strict';

if (process.env.NODE_ENV === \\"production\\") {
  module.exports = require(\\"./with-react-native-field.cjs.prod.js\\");
} else {
  module.exports = require(\\"./with-react-native-field.cjs.dev.js\\");
}
"
`;

exports[`react native: with-react-native-field.cjs.prod.js 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: !0
});

var index = \\"react native\\";

exports.default = index;
"
`;

exports[`react native: with-react-native-field.esm.js 1`] = `
"var index = \\"react native\\";

export default index;
"
`;

exports[`react native: with-react-native-field.native.cjs.js 1`] = `
"'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = \\"react native\\";

exports.default = index;
"
`;

exports[`react native: with-react-native-field.native.esm.js 1`] = `
"var index = \\"react native\\";

export default index;
"
`;

exports[`typescript: dist/declarations/src/another-thing.d.ts 1`] = `
"export declare type SomeType = string;
"
`;

exports[`typescript: dist/declarations/src/index.d.ts 1`] = `
"import { SomeType } from \\"./another-thing\\";
export * from \\"./one-more-thing\\";
declare let thing: SomeType;
export default thing;
"
`;

exports[`typescript: dist/declarations/src/one-more-thing.d.ts 1`] = `
"declare var obj: object;

export { obj };
"
`;

exports[`typescript: dist/typescript.cjs.d.ts 1`] = `
"export * from \\"./declarations/src/index\\";
export { default } from \\"./declarations/src/index\\";
"
`;

exports[`typescript: dist/typescript.cjs.dev.js 1`] = `
"'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

let obj = {};

let thing = \\"something\\";

exports.default = thing;
exports.obj = obj;
"
`;

exports[`typescript: dist/typescript.cjs.js 1`] = `
"'use strict';

if (process.env.NODE_ENV === \\"production\\") {
  module.exports = require(\\"./typescript.cjs.prod.js\\");
} else {
  module.exports = require(\\"./typescript.cjs.dev.js\\");
}
"
`;

exports[`typescript: dist/typescript.cjs.prod.js 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: !0
});

let obj = {}, thing = \\"something\\";

exports.default = thing, exports.obj = obj;
"
`;

exports[`typescript: dist/typescript.esm.js 1`] = `
"let obj = {};

let thing = \\"something\\";

export default thing;
export { obj };
"
`;

exports[`typescript: package.json 1`] = `
"{
  \\"name\\": \\"typescript\\",
  \\"version\\": \\"1.0.0\\",
  \\"main\\": \\"dist/typescript.cjs.js\\",
  \\"license\\": \\"MIT\\",
  \\"private\\": true,
  \\"module\\": \\"dist/typescript.esm.js\\",
  \\"dependencies\\": {
    \\"@babel/core\\": \\"^7.4.3\\",
    \\"@babel/preset-typescript\\": \\"^7.3.3\\",
    \\"typescript\\": \\"^3.4.5\\"
  }
}
"
`;

exports[`typescript: src/another-thing.ts 1`] = `
"export type SomeType = string;
"
`;

exports[`typescript: src/index.ts 1`] = `
"import { SomeType } from \\"./another-thing\\";
export * from \\"./one-more-thing\\";

let thing: SomeType = \\"something\\";

export default thing;
"
`;

exports[`typescript: src/one-more-thing.d.ts 1`] = `
"declare var obj: object;

export { obj };
"
`;

exports[`typescript: src/one-more-thing.js 1`] = `
"export let obj = {};
"
`;

exports[`typescript: tsconfig.json 1`] = `
"{
  \\"compilerOptions\\": {
    /* Basic Options */
    \\"target\\": \\"esnext\\" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */,
    \\"module\\": \\"commonjs\\" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
    // \\"lib\\": [],                             /* Specify library files to be included in the compilation. */
    // \\"allowJs\\": true,                       /* Allow javascript files to be compiled. */
    // \\"checkJs\\": true,                       /* Report errors in .js files. */
    // \\"jsx\\": \\"preserve\\",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    // \\"declaration\\": true,                   /* Generates corresponding '.d.ts' file. */
    // \\"declarationMap\\": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
    // \\"sourceMap\\": true,                     /* Generates corresponding '.map' file. */
    // \\"outFile\\": \\"./\\",                       /* Concatenate and emit output to single file. */
    // \\"outDir\\": \\"./\\",                        /* Redirect output structure to the directory. */
    // \\"rootDir\\": \\"./\\",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    // \\"composite\\": true,                     /* Enable project compilation */
    // \\"incremental\\": true,                   /* Enable incremental compilation */
    // \\"tsBuildInfoFile\\": \\"./\\",               /* Specify file to store incremental compilation information */
    // \\"removeComments\\": true,                /* Do not emit comments to output. */
    // \\"noEmit\\": true,                        /* Do not emit outputs. */
    // \\"importHelpers\\": true,                 /* Import emit helpers from 'tslib'. */
    // \\"downlevelIteration\\": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // \\"isolatedModules\\": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    \\"strict\\": true /* Enable all strict type-checking options. */,
    // \\"noImplicitAny\\": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
    // \\"strictNullChecks\\": true,              /* Enable strict null checks. */
    // \\"strictFunctionTypes\\": true,           /* Enable strict checking of function types. */
    // \\"strictBindCallApply\\": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // \\"strictPropertyInitialization\\": true,  /* Enable strict checking of property initialization in classes. */
    // \\"noImplicitThis\\": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
    // \\"alwaysStrict\\": true,                  /* Parse in strict mode and emit \\"use strict\\" for each source file. */

    /* Additional Checks */
    // \\"noUnusedLocals\\": true,                /* Report errors on unused locals. */
    // \\"noUnusedParameters\\": true,            /* Report errors on unused parameters. */
    // \\"noImplicitReturns\\": true,             /* Report error when not all code paths in function return a value. */
    // \\"noFallthroughCasesInSwitch\\": true,    /* Report errors for fallthrough cases in switch statement. */

    /* Module Resolution Options */
    // \\"moduleResolution\\": \\"node\\",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    // \\"baseUrl\\": \\"./\\",                       /* Base directory to resolve non-absolute module names. */
    // \\"paths\\": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // \\"rootDirs\\": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    // \\"typeRoots\\": [],                       /* List of folders to include type definitions from. */
    // \\"types\\": [],                           /* Type declaration files to be included in compilation. */
    // \\"allowSyntheticDefaultImports\\": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    \\"esModuleInterop\\": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    // \\"preserveSymlinks\\": true,              /* Do not resolve the real path of symlinks. */

    /* Source Map Options */
    // \\"sourceRoot\\": \\"\\",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // \\"mapRoot\\": \\"\\",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // \\"inlineSourceMap\\": true,               /* Emit a single file with source maps instead of having a separate file. */
    // \\"inlineSources\\": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // \\"experimentalDecorators\\": true,        /* Enables experimental support for ES7 decorators. */
    // \\"emitDecoratorMetadata\\": true,         /* Enables experimental support for emitting type metadata for decorators. */
    \\"noEmit\\": true
  }
}
"
`;
